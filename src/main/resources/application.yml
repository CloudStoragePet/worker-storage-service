server:
  port: 8082

## DB config
spring:
  application:
    name: worker-storage-service
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:5432/ca-storage?currentSchema=ca-storage
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:1085}
  jpa:
    hibernate:
      ddl-auto: none
  ## RabbitMQ config
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        concurrency: 5
        max-concurrency: 10
        prefetch: 1 # number of messages the listener will prefetch before processing them
  ## redis config
  data:
    redis:
      host: redis
      port: 6379
      password: 1085


## OpenApi config
#springdoc:
#  packagesToScan: org.brain.workerstorageservice.controller
#  pathsToMatch:
#    - /api/v1/storage/worker/**

## Monitoring
management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  otlp:
    metrics:
      export:
        url: http://localhost:4318/v1/metrics
        step: 10s
        resource-attributes:
          "service.name": ${spring.application.name}
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

## folder config
storage:
  path: ${STORAGE_BASE_PATH:/home/vitalii/Projects/CloudApp/storage-service/storage}

## RabbitMQ config
rabbitmq:
  move-queue-name: ${RABBITMQ_MOVE_QUEUE_NAME:storage-move-queue}
  exchange-name: ${RABBITMQ_EXCHANGE_NAME:storage-exchange}
  routing-key: ${RABBITMQ_ROUTING_KEY:storage-move-queue}


## Eureka
eureka:
  client:
    enabled: true
    service-url:
      defaultZone: ${EUREKA_URL:http://eureka-server:8761/eureka}
    fetch-registry: true
    register-with-eureka: true

